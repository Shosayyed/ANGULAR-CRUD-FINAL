{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./seating.service\";\nimport * as i3 from \"@angular/common\";\nfunction SeatingComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function SeatingComponent_tr_30_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const x_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.edit(x_r1));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SeatingComponent_tr_30_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const x_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.remove(x_r1.id));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const x_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(x_r1.seatingSectionName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(x_r1.discPerc);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(x_r1.discEndDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(x_r1.allowIncentive);\n  }\n}\nconst _c0 = function () {\n  return [];\n};\nlet SeatingComponent = /*#__PURE__*/(() => {\n  class SeatingComponent {\n    constructor(fb, service) {\n      this.fb = fb;\n      this.service = service;\n      this.list = [];\n      this.isEdit = false;\n      this.editId = 0;\n      this.form = this.fb.group({\n        seatingSectionName: ['', Validators.required],\n        discPerc: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        discEndDate: ['', Validators.required],\n        allowIncentive: [false]\n      });\n    }\n    ngOnInit() {\n      this.load();\n    }\n    load() {\n      this.service.getAll().subscribe({\n        next: res => {\n          console.log('Raw response:', res);\n          this.list = Array.isArray(res) ? res : Object.values(res);\n          console.log('List loaded:', this.list);\n        },\n        error: err => {\n          console.error('Load error:', err);\n        }\n      });\n    }\n    save() {\n      if (this.form.invalid) {\n        alert('Please fill all fields properly');\n        return;\n      }\n      const f = this.form.value;\n      const data = {\n        id: this.isEdit ? this.editId : 0,\n        seatingSectionName: f.seatingSectionName,\n        discPerc: f.discPerc,\n        discEndDate: new Date(f.discEndDate).toISOString(),\n        allowIncentive: f.allowIncentive ? 'true' : 'false'\n      };\n      console.log('Sending to API:', data);\n      const op = this.isEdit ? this.service.update(data) : this.service.create(data);\n      op.subscribe({\n        next: () => {\n          this.reset();\n          this.load();\n        },\n        error: err => {\n          console.error('API error:', err);\n          alert('Error saving data. Please check console.');\n        }\n      });\n    }\n    edit(item) {\n      this.form.patchValue({\n        seatingSectionName: item.seatingSectionName,\n        discPerc: item.discPerc,\n        discEndDate: item.discEndDate.substring(0, 10),\n        allowIncentive: item.allowIncentive === 'true'\n      });\n      this.isEdit = true;\n      this.editId = item.id;\n    }\n    remove(id) {\n      if (!confirm('Are you sure to delete?')) return;\n      this.service.delete(id).subscribe(() => this.load());\n    }\n    reset() {\n      this.form.reset();\n      this.isEdit = false;\n      this.editId = 0;\n    }\n    static {\n      this.ɵfac = function SeatingComponent_Factory(t) {\n        return new (t || SeatingComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SeatingService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SeatingComponent,\n        selectors: [[\"app-seating\"]],\n        decls: 31,\n        vars: 4,\n        consts: [[1, \"container\", \"mt-4\"], [1, \"row\", \"g-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-4\"], [\"placeholder\", \"Section Name\", \"formControlName\", \"seatingSectionName\", 1, \"form-control\"], [1, \"col-md-2\"], [\"type\", \"number\", \"placeholder\", \"Discount %\", \"formControlName\", \"discPerc\", 1, \"form-control\"], [1, \"col-md-3\"], [\"type\", \"date\", \"formControlName\", \"discEndDate\", 1, \"form-control\"], [1, \"col-md-3\", \"form-check\", \"pt-2\"], [\"type\", \"checkbox\", \"formControlName\", \"allowIncentive\", 1, \"form-check-input\"], [1, \"form-check-label\"], [1, \"col-md-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-warning\", \"btn-sm\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n        template: function SeatingComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function SeatingComponent_Template_form_ngSubmit_1_listener() {\n              return ctx.save();\n            });\n            i0.ɵɵelementStart(2, \"div\", 2);\n            i0.ɵɵelement(3, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 4);\n            i0.ɵɵelement(5, \"input\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 6);\n            i0.ɵɵelement(7, \"input\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\", 8);\n            i0.ɵɵelement(9, \"input\", 9);\n            i0.ɵɵelementStart(10, \"label\", 10);\n            i0.ɵɵtext(11, \"Allow Incentive\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 11)(13, \"button\", 12);\n            i0.ɵɵtext(14);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelement(15, \"hr\");\n            i0.ɵɵelementStart(16, \"table\", 13)(17, \"thead\")(18, \"tr\")(19, \"th\");\n            i0.ɵɵtext(20, \"Section\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"th\");\n            i0.ɵɵtext(22, \"Discount %\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"th\");\n            i0.ɵɵtext(24, \"End Date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"th\");\n            i0.ɵɵtext(26, \"Incentive\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(27, \"th\");\n            i0.ɵɵtext(28, \"Actions\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(29, \"tbody\");\n            i0.ɵɵtemplate(30, SeatingComponent_tr_30_Template, 14, 4, \"tr\", 14);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(13);\n            i0.ɵɵtextInterpolate(ctx.isEdit ? \"Update\" : \"Add\");\n            i0.ɵɵadvance(16);\n            i0.ɵɵproperty(\"ngForOf\", ctx.list || i0.ɵɵpureFunction0(3, _c0));\n          }\n        },\n        dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return SeatingComponent;\n})();\nexport { SeatingComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}